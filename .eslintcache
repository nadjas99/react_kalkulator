[{"C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\index.tsx":"1","C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\reportWebVitals.ts":"2","C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\App.tsx":"3","C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\Uputstvo.tsx":"4","C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\Home.tsx":"5","C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\NavigationBar.tsx":"6","C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\Calculator.tsx":"7","C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\History.tsx":"8","C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\Dugme.tsx":"9","C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\Prednja.tsx":"10"},{"size":500,"mtime":1610653335000,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1610653335000,"results":"13","hashOfConfig":"12"},{"size":653,"mtime":1630949356364,"results":"14","hashOfConfig":"12"},{"size":295,"mtime":1630851160553,"results":"15","hashOfConfig":"12"},{"size":937,"mtime":1630851111046,"results":"16","hashOfConfig":"12"},{"size":588,"mtime":1630849852184,"results":"17","hashOfConfig":"12"},{"size":4923,"mtime":1610653335000,"results":"18","hashOfConfig":"12"},{"size":693,"mtime":1610653335000,"results":"19","hashOfConfig":"12"},{"size":301,"mtime":1610653335000,"results":"20","hashOfConfig":"12"},{"size":1144,"mtime":1630849750318,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"gx6qiq",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\index.tsx",[],["44","45"],"C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\reportWebVitals.ts",[],"C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\App.tsx",[],"C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\Uputstvo.tsx",[],"C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\Home.tsx",["46","47","48","49"],"C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\NavigationBar.tsx",[],"C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\Calculator.tsx",["50"],"import React, { useState } from 'react'\nimport { Container, Form, Table } from 'react-bootstrap';\nimport Dugme from './Dugme'\ninterface Props {\n    dodajOperaciju: (operacija: string) => void;\n}\nexport default function Calculator(props: Props) {\n    const [prviBroj, setPrviBroj] = useState(0);\n    const [drugiBroj, setDrugiBroj] = useState(0);\n    const [aktivanPrvi, setAktivanPrvi] = useState(true);\n    const [prikaziDrugi, setPrikaziDrugi] = useState(false)\n    const [operacija, setOperacija] = useState('');\n    const klikNaBroj = (broj: number) => {\n        if (aktivanPrvi) {\n            setPrviBroj(prev => {\n                return prev * 10 + broj;\n            })\n        } else {\n            setPrikaziDrugi(true);\n            setDrugiBroj(prev => {\n                return prev * 10 + broj;\n            })\n        }\n    }\n    const izvrsiOperaciju = () => {\n        if (operacija === '') {\n            return;\n        }\n        let broj = 0;\n        if (operacija === '+')\n            broj = prviBroj + drugiBroj;\n        if (operacija === '-')\n            broj = prviBroj - drugiBroj;\n        if (operacija === 'x')\n            broj = prviBroj * drugiBroj;\n        if (operacija === '/') {\n            if (drugiBroj == 0) {\n                alert('Deljenje nulom nije dozvoljeno');\n                return;\n            } else {\n                broj = prviBroj / drugiBroj;\n            }\n\n        }\n\n\n        props.dodajOperaciju(prviBroj + ' ' + operacija + ' ' + drugiBroj + ' = ' + broj);\n\n        setPrviBroj(prev => {\n            if (operacija === '') {\n                return prev;\n            }\n            let broj = 0;\n            if (operacija === '+')\n                broj = prev + drugiBroj;\n            if (operacija === '-')\n                broj = prev - drugiBroj;\n            if (operacija === 'x')\n                broj = prev * drugiBroj;\n            if (operacija === '/')\n                broj = prev / drugiBroj;\n            return broj;\n        })\n        setPrikaziDrugi(false);\n        setDrugiBroj(0);\n        setOperacija('');\n        setAktivanPrvi(true);\n    }\n    const postaviOperaciju = (oper: string) => {\n        if (!aktivanPrvi) {\n            izvrsiOperaciju();\n        }\n        setOperacija(oper);\n        setAktivanPrvi(false);\n    }\n    return (\n        <Container fluid>\n            <Form.Control type='text' className='text-right' disabled value={!prikaziDrugi ? prviBroj : drugiBroj} />\n            <Table bordered>\n                <tbody>\n                    <tr>\n                        {\n                            [7, 8, 9].map(element => {\n                                return <Dugme text={element + ''} onClick={() => { klikNaBroj(element) }} />\n                            })\n                        }\n                        <Dugme text='-' onClick={() => { postaviOperaciju('-'); }} />\n                        <Dugme text='+' onClick={() => { postaviOperaciju('+'); }} />\n\n                    </tr>\n                    <tr>\n                        {\n                            [4, 5, 6].map(element => {\n                                return <Dugme text={element + ''} onClick={() => { klikNaBroj(element) }} />\n                            })\n                        }\n                        <Dugme text='x' onClick={() => { postaviOperaciju('x'); }} />\n                        <Dugme text='/' onClick={() => { postaviOperaciju('/'); }} />\n\n                    </tr>\n                    <tr>\n                        {\n                            [1, 2, 3].map(element => {\n                                return <Dugme text={element + ''} onClick={() => { klikNaBroj(element) }} />\n                            })\n                        }\n                        <Dugme text='C' onClick={() => {\n                            if (aktivanPrvi) {\n                                setPrviBroj(0);\n                            } else {\n                                setDrugiBroj(0);\n                            }\n                        }} />\n                        <Dugme text='CE' onClick={() => {\n                            setPrviBroj(0);\n                            setDrugiBroj(0);\n                            setOperacija('');\n                        }} />\n\n                    </tr>\n                    <tr>\n\n                        <Dugme text='+/-' onClick={() => {\n                            if (aktivanPrvi) {\n                                setPrviBroj(prev => 0 - prev);\n                            } else {\n                                setDrugiBroj(prev => 0 - prev);\n                            }\n                        }} />\n\n                        <Dugme text='0' onClick={() => { klikNaBroj(0) }} />\n\n                        <Dugme text='' onClick={() => { }} />\n                        <Dugme text='=' onClick={izvrsiOperaciju} />\n\n\n                    </tr>\n                </tbody>\n            </Table>\n\n        </Container>\n    )\n}\n","C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\History.tsx",[],"C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\Dugme.tsx",[],"C:\\Users\\Nadja\\Desktop\\react_domaci-master\\src\\components\\Prednja.tsx",["51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":5,"column":8,"nodeType":"58","messageId":"59","endLine":5,"endColumn":15},{"ruleId":"56","severity":1,"message":"60","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":16},{"ruleId":"56","severity":1,"message":"61","line":9,"column":12,"nodeType":"58","messageId":"59","endLine":9,"endColumn":21},{"ruleId":"56","severity":1,"message":"62","line":18,"column":11,"nodeType":"58","messageId":"59","endLine":18,"endColumn":26},{"ruleId":"63","severity":1,"message":"64","line":37,"column":27,"nodeType":"65","messageId":"66","endLine":37,"endColumn":29},{"ruleId":"56","severity":1,"message":"67","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":21},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'History' is defined but never used.","Identifier","unusedVar","'Uputstvo' is defined but never used.","'operacije' is assigned a value but never used.","'obrisiOperacije' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NavigationBar' is defined but never used.","no-global-assign","no-unsafe-negation"]